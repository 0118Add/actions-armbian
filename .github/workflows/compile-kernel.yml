#==========================================================================
# Description: Compile the Armbian kernel
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Compile the armbian kernel

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      armbian_url:
        description: "Input armbian path"
        required: false
        default: ""

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-server)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          # Get the url of the rebuild armbian file
          armbian_url="${{ github.event.inputs.armbian_url }}"
          if  [[ -z "${armbian_url}" ]]; then
              armbian_site="https://armbian.tnahosting.net/dl/lepotato/archive/"
              armbian_name="Armbian.*focal.*.img.xz"
              armbian_file=$(curl -s "${armbian_site}" | grep -oE "${armbian_name}" | head -n 1)
              if [ -n "${armbian_file}" ]; then
                  armbian_url="${armbian_site}/${armbian_file}"
              else
                  echo -e "Invalid download path: [ ${armbian_site} ]"
                  exit 1
              fi
          fi
          echo "ARMBIAN_URL=${armbian_url}" >> $GITHUB_ENV
          echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
          # Get the release name of the rebuild armbian file
          set_release="_"
          ARR_RELEASE=("bionic" "focal" "hirsute" "bullseye" "buster" "stretch")
          i=1
          for r in ${ARR_RELEASE[*]}; do
              if [[ "${armbian_url}" == *${r}* ]]; then
                  set_release="_${r}_"
                  break
              fi
              let i++
          done
          echo "ARMBIAN_RELEASE=${set_release}" >> $GITHUB_ENV
      - name: Compile the kernel for Amlogic s9xxx
        uses: ophub/amlogic-s9xxx-armbian@main
        with:
          build_target: kernel
          kernel_version: 5.15.13_5.4.170
          kernel_auto: true
          armbian_kernel: 5.4.170_5.10.90_5.15.12_5.16.2
          kernel_sign: -BGG

      - name: Upload Kernel to Release
        uses: ncipollo/release-action@v1
        if: steps.compile.outputs.status == 'success' && !cancelled()
        with:
          tag: kernel_${{ env.PACKAGED_OUTPUTTAGS }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            The kernel can be used to compile Armbian and OpenWer.
            The kernel source code comes from: ${{ env.KERNEL_REPO }}
